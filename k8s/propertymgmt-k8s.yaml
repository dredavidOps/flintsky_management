# 1. PersistentVolumeClaim for Postgres data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# 2. Secret for sensitive Django/Postgres settings
apiVersion: v1
kind: Secret
metadata:
  name: django-secret
type: Opaque
data:
  db-password: cG9zdGdyZXM=         # 'postgres' base64-encoded
  secret-key: c2VjcmV0LWtleQ==       # 'secret-key' also base64-encoded
---
# 3. ConfigMap for non-sensitive env vars
apiVersion: v1
kind: ConfigMap
metadata:
  name: django-config
data:
  DATABASE_NAME: propertymgmt
  DATABASE_USER: postgres
  DATABASE_HOST: postgres
  DATABASE_PORT: "5432"
  DJANGO_ALLOWED_HOSTS: "*"
  DEBUG: "0"
---
# 4. Postgres Deployment & Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        ports:
          - containerPort: 5432
        env:
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: django-config
                key: DATABASE_NAME
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                name: django-config
                key: DATABASE_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: django-secret
                key: db-password
        volumeMounts:
          - name: postgres-storage
            mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
---
# 5. Django Deployment & Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
spec:
  replicas: 2
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
    spec:
      containers:
      - name: django
        image: propertymgmt:local
        imagePullPolicy: Never
        ports:
          - containerPort: 8000
        env:
          - name: DATABASE_NAME
            valueFrom:
              configMapKeyRef:
                name: django-config
                key: DATABASE_NAME
          - name: DATABASE_USER
            valueFrom:
              configMapKeyRef:
                name: django-config
                key: DATABASE_USER
          - name: DATABASE_HOST
            valueFrom:
              configMapKeyRef:
                name: django-config
                key: DATABASE_HOST
          - name: DATABASE_PORT
            valueFrom:
              configMapKeyRef:
                name: django-config
                key: DATABASE_PORT
          - name: DJANGO_ALLOWED_HOSTS
            valueFrom:
              configMapKeyRef:
                name: django-config
                key: DJANGO_ALLOWED_HOSTS
          - name: DEBUG
            valueFrom:
              configMapKeyRef:
                name: django-config
                key: DEBUG
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: django-secret
                key: db-password
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: django-secret
                key: secret-key
---
apiVersion: v1
kind: Service
metadata:
  name: django
spec:
  type: NodePort
  ports:
    - port: 8000
      targetPort: 8000
      nodePort:
  selector:
    app: django
